#!/usr/bin/env bash

PROG_NAME="comicpress"
CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/$PROG_NAME"

NUM_THREADS=4
MAGICK_MEMORY_LIMIT=1GiB

PIXEL_DENSITY=300
DISPLAY_WIDTH=1440
DISPLAY_HEIGHT=1920

SCALING_FILTER=MagicKernelSharp2021
IMAGE_QUALITY=100

main() {
    if test "$#" -ne 2; then
        echo "$PROG_NAME: Usage: $PROG_NAME INPUT_DIRECTORY OUTPUT_DIRECTORY" >&2
        exit 1
    fi

    if ! ls "$1"/*.pdf > /dev/null 2>&1; then
        echo "$PROG_NAME: '$1' is not a directory containing PDF files." >&2
        exit 1
    fi

    output_dir="$2"
    mkdir -p "$output_dir" "$CACHE_DIR"

    if command -v parallel > /dev/null; then
        export CACHE_DIR PIXEL_DENSITY MAGICK_MEMORY_LIMIT DISPLAY_WIDTH \
            DISPLAY_HEIGHT SCALING_FILTER IMAGE_QUALITY output_dir
        export -f process_pdf
        echo "Processing PDFs in parallel..."
        ls "$1"/*.pdf | parallel -j "$NUM_THREADS" process_pdf
    else
        printf "$PROG_NAME: %s %s %s\n" \
            'Warning: `parallel` command not found. The script will run' \
            "sequentially, which is slower. Itâ€™s recommended to stop the" \
            "script and install GNU Parallel." \
            >&2
        MAGICK_UNLIMITED_MEMORY=true
        for pdf in "$1"/*.pdf; do
            process_pdf "$pdf"
        done
    fi

    rm -rf "$CACHE_DIR/"
    echo "All tasks complete."
}

process_pdf() {
    pdf_file_name="$1"
    pdf_base_name="$(basename "$pdf_file_name" .pdf)"

    echo "Processing '$pdf_file_name'..."

    temp_dir="$CACHE_DIR/$pdf_base_name"
    mkdir -p "$temp_dir"

    pages_non_monochrome=$(
        pdfimages -list "$pdf_file_name" | \
        tail -n +3 | \
        awk '$3 != "stencil" {print $1}' | \
        sort -un
    )

    num_pages="$(pdfinfo "$pdf_file_name" | grep "^Pages:" | awk '{print $2}')"
    num_pages_digits="$(echo -n "$num_pages" | wc -c | tr -d "[:space:]")"

    echo "Converting $num_pages pages..."
    for page_num in $(seq 1 "$num_pages"); do
        page_num_0_indexed="$(expr "$page_num" - 1)"
        page_num_0_padded="$(printf "%0*d" "$num_pages_digits" "$page_num")"
        output_file="$temp_dir/$page_num_0_padded.webp"

        if echo "$pages_non_monochrome" | grep -q "^$page_num$"; then
            colors=128
        else
            colors=8
        fi

        magick_cmd=(magick)

        if test -z "$MAGICK_UNLIMITED_MEMORY"; then
            magick_cmd+=(-limit memory "$MAGICK_MEMORY_LIMIT")
        fi

        magick_cmd+=(
            -density "$PIXEL_DENSITY"
            "$pdf_file_name[$page_num_0_indexed]"
            -trim +repage
            -colorspace Gray
            -resize "${DISPLAY_WIDTH}x$DISPLAY_HEIGHT"
            -filter "$SCALING_FILTER"
            -quality "$IMAGE_QUALITY"
            -define webp:method=6
            -strip
            -colors "$colors"
            -level 0%,100%,0.5
            "$output_file"
        )

        "${magick_cmd[@]}"
    done

    echo "Creating archive '$output_dir/$pdf_base_name.cbz'..."
    zip -0 -j "$output_dir/${pdf_base_name}.cbz" "$temp_dir"/*.webp
    printf "%s\n\n" "Archive '$output_dir/$pdf_base_name.cbz' created."
}

main "$@"
